/**
 * BSD-style license; for more info see http://pmd.sourceforge.net/license.html
 */

package net.sourceforge.pmd.lang.ast.impl.javacc;

import net.sourceforge.pmd.lang.Parser;
import net.sourceforge.pmd.lang.ast.CharStream;
import net.sourceforge.pmd.lang.ast.ParseException;
import net.sourceforge.pmd.lang.ast.RootNode;
import net.sourceforge.pmd.lang.ast.TokenMgrError;
import net.sourceforge.pmd.util.document.TextDocument;

/**
 * Base implementation of the {@link Parser} interface for JavaCC language
 * implementations. This wraps a parser generated by JavaCC, it's not meant
 * as a base class for the generated parser.
 *
 * @param <R> Type of the root node of this language
 */
public abstract class JjtreeParserAdapter<R extends RootNode> implements Parser {

    protected JjtreeParserAdapter() {
        // inheritance only
    }

    protected abstract JavaccTokenDocument newDocumentImpl(TextDocument textDocument);

    protected CharStream newCharStream(JavaccTokenDocument tokenDocument) {
        return new SimpleCharStream(tokenDocument);
    }

    @Override
    public R parse(ParserTask task) throws ParseException {
        JavaccTokenDocument doc = newDocumentImpl(task.getTextDocument());
        CharStream charStream = newCharStream(doc);

        try {
            return parseImpl(charStream, task);
        } catch (TokenMgrError tme) {
            throw tme.setFileName(task.getFileDisplayName());
        }
    }

    protected abstract R parseImpl(CharStream cs, ParserTask task) throws ParseException;


    @Override
    public String toString() {
        return getClass().getSimpleName();
    }
}
