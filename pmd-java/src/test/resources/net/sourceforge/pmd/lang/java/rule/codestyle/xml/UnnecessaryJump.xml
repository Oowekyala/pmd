<?xml version="1.0" encoding="UTF-8"?>

<test-data
    xmlns="http://pmd.sourceforge.net/rule-tests"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">
    <test-code>
        <description>Last statement in return</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
 void bar() {
  int y = 3;
  return;
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description>ok since method is not void</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
 int bar() {
  return 2;
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description>Not ok, return on condition</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
 void bar() {
  if (false) return;
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description>interface methods don't have return statements</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public interface Foo {
 void bar();
}
     ]]></code>
    </test-code>
    <test-code>
        <description>abstract methods don't have return statements</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
 abstract void bar();
}
     ]]></code>
    </test-code>
    <test-code>
        <description>return inside a catch</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
 void bar() {
  try { 
  } catch(Exception e){
     return;
  }
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description>continue in loop</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
    void bar() {
        for (int i = 0; i < x; i++) {
            if (something(x)) {
                continue; // no statements left in loop
            } else {
                println(x);
            }
        }
    }
}
     ]]></code>
    </test-code>
</test-data>
