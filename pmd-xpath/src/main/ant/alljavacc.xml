<project name="pmd" default="alljavacc" basedir="../../../../../../">

    <property name="javacc-home.path" value="target/lib"/>

    <property name="ast-package" value="net/sourceforge/pmd/lang/xpath/ast"/>

    <property name="base-visitor-interface-name" value="XPathGenericVisitor"/>
    <property name="base-visitor-interface-file" value="${target}/${ast-package}/${base-visitor-interface-name}.java"/>
    <property name="base-visitor-abstract-class-file" value="${target}/${ast-package}/Abstract${base-visitor-interface-name}.java"/>

    <!-- -r+p = no return, one param -->
    <property name="-r+p-visitor-interface-name" value="SideEffectingVisitor"/>
    <property name="-r+p-visitor-interface-file" value="${target}/${ast-package}/${-r+p-visitor-interface-name}.java"/>
    <property name="-r+p-visitor-abstract-class-file" value="${target}/${ast-package}/Abstract${-r+p-visitor-interface-name}.java"/>


    <target name="alljavacc"
            description="Generates all XPathCC aspects within PMD"
            depends="checkUpToDate,init,javajjtree,cleanup"/>

    <target name="checkUpToDate">
        <uptodate property="javaccBuildNotRequired" targetfile="${target}/last-generated-timestamp">
            <srcfiles dir="etc/grammar" includes="*.jj*"/>
        </uptodate>
        <echo message="up to date check: javaccBuildNotRequired=${javaccBuildNotRequired}"/>
    </target>

    <target name="init" unless="javaccBuildNotRequired">
        <mkdir dir="${javacc-home.path}"/>
        <copy file="${javacc.jar}" tofile="${javacc-home.path}/javacc.jar"/>

        <mkdir dir="${target}"/>
        <touch file="${target}/last-generated-timestamp"/>
    </target>

    <target name="cleanup">
        <delete dir="${javacc-home.path}"/>
    </target>

    <target name="javajjtree" description="Generates the XPath parser and AST source files" unless="javaccBuildNotRequired">
        <delete dir="${target}/${ast-package}"/>
        <mkdir dir="${target}/${ast-package}"/>
        <jjtree target="etc/grammar/XPath.jjt"
                outputdirectory="${target}/${ast-package}"
                javacchome="${javacc-home.path}"/>
        <!-- Ensure generated using CharStream interface -->
        <javacc static="false"
                usercharstream="true"
                target="${target}/${ast-package}/XPath.jj"
                outputdirectory="${target}/${ast-package}"
                javacchome="${javacc-home.path}"/>
        <delete file="${target}/${ast-package}/Node.java"/>
        <delete file="${target}/${ast-package}/SimpleNode.java"/>
        <delete file="${target}/${ast-package}/CharStream.java"/>
        <delete file="${target}/${ast-package}/TokenMgrError.java"/>
        <delete file="${target}/${ast-package}/Token.java"/>
        <delete file="${target}/${ast-package}/ParseException.java"/>
        <delete>
            <fileset dir="${target}/${ast-package}">
                <include name="AST*.java"/>
            </fileset>
        </delete>


        <rename src="${target}/${ast-package}/XPathParserDefaultVisitor.java"
                dest="${base-visitor-abstract-class-file}"/>

        <rename src="${target}/${ast-package}/XPathParserVisitor.java"
                dest="${base-visitor-interface-file}"/>


        <replace token="import .*;"
                 value="">
            <fileset dir="${target}/${ast-package}">
                <include name="*.java"/>
            </fileset>
        </replace>
        <replace token="extends SimpleNode"
                 value="extends AbstractXPathNode">
            <fileset dir="${target}/${ast-package}">
                <include name="AST*.java"/>
            </fileset>
        </replace>
        <replace token="import net.sourceforge.pmd.lang.xpath.ast.*;"
                 value="package net.sourceforge.pmd.lang.xpath.ast;">
            <fileset dir="${target}/${ast-package}">
                <include name="*.java"/>
            </fileset>
        </replace>
        <replaceregexp file="${target}/${ast-package}/XPathParserConstants.java"
                       match="XPathParserConstants.java ./"
                       replace="\0package net.sourceforge.pmd.lang.xpath.ast;">
        </replaceregexp>


        <replace file="${target}/${ast-package}/XPathParserTokenManager.java">
            <replacefilter token="public class XPathParserTokenManager"
                           value="import net.sourceforge.pmd.lang.ast.CharStream;
                                  import net.sourceforge.pmd.lang.ast.TokenMgrError;

                                  public class XPathParserTokenManager extends net.sourceforge.pmd.lang.ast.AbstractTokenManager"/>
            <replacefilter token="protected int curChar;" value="protected char curChar;"/>
        </replace>
        <replace file="${target}/${ast-package}/XPathParser.java"
                 token="public class XPathParser"
                 value="import net.sourceforge.pmd.lang.ast.CharStream;
                        import net.sourceforge.pmd.lang.ast.TokenMgrError;
                        public class XPathParser"/>
        <replace file="${target}/${ast-package}/XPathParser.java"
                 token="throw new Error"
                 value="throw new RuntimeException"/>


        <!-- Base visitor -->
        <replace file="${base-visitor-interface-file}"
                 token="SimpleNode"
                 value="XPathNode"/>

        <replace dir="${target}/${ast-package}">
            <include name="*Visitor.java"/>
            <replacefilter token="Visitor" value="Visitor&lt;T&gt;"/>
            <replacefilter token="Object" value="T"/>
            <replacefilter token="XPathParserVisitor" value="${base-visitor-interface-name}"/>
            <replacefilter token="SimpleNode" value="XPathNode"/>
            <replacefilter token="class XPathParserDefaultVisitor" value="abstract class AbstractXPathGenericVisitor"/>
        </replace>


        <!-- Side effecting visitor -->
        <copy file="${base-visitor-interface-file}" tofile="${-r+p-visitor-interface-file}"/>
        <replace file="${-r+p-visitor-interface-file}">
            <replacefilter token="${base-visitor-interface-name}" value="${-r+p-visitor-interface-name}"/>
            <replacefilter token="T visit" value="void visit"/>
        </replace>

        <copy file="${base-visitor-abstract-class-file}" tofile="${-r+p-visitor-abstract-class-file}"/>
        <replace file="${-r+p-visitor-abstract-class-file}">
            <replacefilter token="${base-visitor-interface-name}" value="${-r+p-visitor-interface-name}"/>
            <replacefilter token="T visit" value="void visit"/>
            <replacefilter token="T defaultVisit" value="void defaultVisit"/>
            <replacefilter token="return data;" value=""/>
            <replacefilter token="return " value=""/>
            <replacefilter token="implements ${base-visitor-interface-name}" value="implements ${-r+p-visitor-interface-file}"/>
        </replace>


        <replace file="${target}/${ast-package}/JJTXPathParserState.java">
            <replacetoken>public class</replacetoken>
            <replacevalue><![CDATA[import net.sourceforge.pmd.lang.ast.Node;

public class]]></replacevalue>
        </replace>

    </target>
</project>
